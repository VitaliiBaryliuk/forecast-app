{"version":3,"sources":["redux/actions/input.js","redux/actions/fetchData.js","constants/apiConstants.js","components/ForecastDay.js","components/Forecast/presenter.js","components/Forecast/index.js","components/ForecastWeek/presenter.js","components/ForecastWeek/index.js","App.js","redux/reducers/index.js","redux/reducers/input.js","redux/reducers/fetchData.js","redux/stores/configureStore.js","index.js","constants/actionTypes.js"],"names":["setNewInputValue","inputValue","type","actionTypes","setTargetCity","targetCity","setLastQueries","lastQuery","itemsHasErrored","bool","hasErrored","itemsIsLoading","isLoading","itemsFetchDataSuccess","items","itemsFetchData","url","dispatch","fetch","then","response","ok","Error","statusText","json","catch","API_KEY","BASE_API_URL","daysInWeek","ForecastDay","_ref","item","date","Date","dt","react_default","a","createElement","className","getDate","getDay","slice","weather","main","src","icon","alt","Math","ceil","temp","max","night","Forecast","onFormSubmit","lastQueries","name","onSubmit","e","preventDefault","input","document","forms","forecast","value","placeholder","Object","entries","length","map","query","key","city","components_ForecastDay","list","react_router_dom","to","connect","state","_state$input","onInputChange","actions","ForecastWeek","Fragment","App","react_router","exact","path","component","combineReducers","arguments","undefined","action","objectSpread","concat","toConsumableArray","configureStore","initalState","createStore","rootReducer","applyMiddleware","thunk","__webpack_require__","d","__webpack_exports__","r","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_redux_stores_configureStore__WEBPACK_IMPORTED_MODULE_5__","_App__WEBPACK_IMPORTED_MODULE_6__","store","ReactDOM","render","basename","getElementById","hot","accept","INPUT_CHANGED","FORM_SUBMITTED","UPDATE_LAST_QUERIES"],"mappings":"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","file":"static/js/main.6de1647b.chunk.js","sourcesContent":["import * as actionTypes from '../../constants/actionTypes'\r\n\r\nexport function setNewInputValue(inputValue) {\r\n  return {\r\n    type: actionTypes.INPUT_CHANGED,\r\n    inputValue, \r\n  } \r\n}\r\n\r\nexport function setTargetCity(targetCity) {\r\n  return {\r\n    type: actionTypes.FORM_SUBMITTED,\r\n    targetCity\r\n  }\r\n}\r\n\r\nexport function setLastQueries(lastQuery) {\r\n  return {\r\n    type: actionTypes.UPDATE_LAST_QUERIES,\r\n    lastQuery\r\n  }\r\n}","export function itemsHasErrored(bool) {\r\n  return {\r\n      type: 'ITEMS_HAS_ERRORED',\r\n      hasErrored: bool\r\n  };\r\n}\r\n\r\nexport function itemsIsLoading(bool) {\r\n  return {\r\n      type: 'ITEMS_IS_LOADING',\r\n      isLoading: bool\r\n  };\r\n}\r\n\r\nexport function itemsFetchDataSuccess(items) {\r\n  return {\r\n      type: 'ITEMS_FETCH_DATA_SUCCESS',\r\n      items\r\n  };\r\n}\r\n\r\nexport function itemsFetchData(url) {\r\n  return (dispatch) => {\r\n      dispatch(itemsIsLoading(true));\r\n\r\n      fetch(url)\r\n          .then((response) => {\r\n              if (!response.ok) {\r\n                  throw Error(response.statusText);\r\n              }\r\n\r\n              dispatch(itemsIsLoading(false));\r\n\r\n              return response;\r\n          })\r\n          .then((response) => response.json())\r\n          .then((items) => dispatch(itemsFetchDataSuccess(items)))\r\n          .catch(() => dispatch(itemsHasErrored(true)));\r\n  };\r\n}","export const API_KEY = '&appid=ebf5e5843530b4f8cf4c0bd17b6b6048'\r\n\r\nexport const BASE_API_URL = 'https://api.openweathermap.org/data/2.5/forecast/daily?q='\r\n\r\nexport const ICONS_BASE_URL = 'https://openweathermap.org/img/w/'","import React from 'react'\r\n\r\nimport { ICONS_BASE_URL } from '../constants/apiConstants'\r\n\r\nconst daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\r\nconst ForecastDay = ({ item }) => {\r\n  const date = new Date(item.dt * 1000)\r\n\r\n  return (\r\n    <div className='forecast__day'>\r\n      <div className='forecast__day-left'>\r\n        <div className='forecast__day-date'>\r\n          {date.getDate()} {daysInWeek[date.getDay()].slice(0, 3)}. &#9900; \r\n        </div>\r\n        <div className='forecast__day-main'>\r\n          {item.weather[0].main}\r\n        </div>\r\n      </div>\r\n      <div className='forecast__day-right'>\r\n        <img className='forecast__weather-icon' src={ICONS_BASE_URL + item.weather[0].icon + '.png'} alt='icon of weather'/>\r\n        <div>{Math.ceil(item.temp.max)} / {Math.ceil(item.temp.night)} &#8451;</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForecastDay","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport ForecastDay from '../ForecastDay';\r\n\r\nconst Forecast = ({inputValue, items, onFormSubmit, lastQueries}) => (\r\n    <div className='forecast'>\r\n      <form \r\n        name='forecast'\r\n        className='forecast__form'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          const input = document.forms.forecast.input\r\n          onFormSubmit(input.value)\r\n          input.value = ''\r\n        }} \r\n      >\r\n        <input \r\n          type='text'\r\n          name='input' \r\n          value={inputValue} \r\n          placeholder='City!'\r\n        />\r\n        <button type='submit'>Forecast</button>   \r\n      </form>\r\n      {!!Object.entries(items).length && \r\n        <div className='forecast__main-info'>\r\n          <div className='forecast__last-queries'>\r\n          <span>Last sities:</span>\r\n          <ul className='forecast__last-queries-list'>\r\n            {\r\n              !!lastQueries\r\n              ? lastQueries.map(query => \r\n                <li key={query}>{query}</li>\r\n              )\r\n              : ''\r\n            }\r\n          </ul>\r\n        </div>\r\n        <h2>{items.city.name}</h2>\r\n        <ForecastDay item={items.list[0]} />\r\n          <div className='link-wrapper'>\r\n            <NavLink className='forecast__link' to='/week'>Forecast for week</NavLink>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n\r\n\r\nexport default Forecast","import { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actions'\r\n\r\nimport { BASE_API_URL, API_KEY } from'../../constants/apiConstants'\r\nimport Forecast from './presenter'\r\n\r\nfunction mapStateToProps(state) {\r\n  const {inputValue, targetCity, lastQueries} = state.input\r\n  const { items } = state\r\n  \r\n  return {\r\n    inputValue,\r\n    targetCity,\r\n    items,\r\n    lastQueries\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onInputChange: inputValue => {\r\n      dispatch(actions.input.setNewInputValue(inputValue))\r\n    },\r\n    onFormSubmit: targetCity => {\r\n      dispatch(actions.input.setTargetCity(targetCity))\r\n      dispatch(actions.input.setLastQueries(targetCity))\r\n      dispatch(actions.fetchData.itemsFetchData(BASE_API_URL + targetCity + '&type=like&units=metric&cnt=7' + API_KEY))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Forecast)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport ForecastDay from '../ForecastDay';\r\n\r\nconst ForecastWeek = ({ items }) => (\r\n    <div className='forecast'> \r\n      {\r\n        !!Object.entries(items.list).length &&\r\n        <React.Fragment>\r\n          <h2>{items.city.name}</h2>\r\n          {items.list.map(item => \r\n            <ForecastDay key={item.dt} item={item} />\r\n          )}\r\n          <NavLink className='forecast__link' to='/'>Back to search</NavLink>\r\n        </React.Fragment>\r\n      }\r\n    </div>   \r\n  )\r\n\r\nexport default ForecastWeek","import { connect } from 'react-redux'\r\n\r\nimport ForecastWeek from './presenter'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  const { items } = state\r\n  return {\r\n    items\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(ForecastWeek)","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Forecast from './components/Forecast/index'\r\nimport ForecastWeek from './components/ForecastWeek/index'\r\n\r\n\r\nconst App = () => (\r\n  <React.Fragment>\r\n    <Switch>\r\n      <Route exact path='/' component={Forecast} />\r\n      <Route path='/week' component={ForecastWeek} />\r\n    </Switch>\r\n  </React.Fragment>\r\n)\r\n\r\nexport default App","import { combineReducers } from 'redux'\r\n\r\nimport { items, itemsHasErrored, itemsIsLoading } from './fetchData';\r\nimport input from './input'\r\n\r\nexport default combineReducers({\r\n  input,\r\n  items, \r\n  itemsHasErrored,\r\n  itemsIsLoading\r\n})\r\n","import * as actionTypes from '../../constants/actionTypes'\r\n\r\nexport default function(state = [], action) {\r\n  switch(action.type) {\r\n    case actionTypes.INPUT_CHANGED:\r\n      return {\r\n        ...state,\r\n        inputValue: action.inputValue\r\n      }\r\n    case actionTypes.FORM_SUBMITTED:\r\n      return {\r\n        ...state,\r\n        targetCity: action.targetCity\r\n      }    \r\n    case actionTypes.UPDATE_LAST_QUERIES:\r\n    const lastQueries = !!state.lastQueries \r\n      ? [action.lastQuery, ...state.lastQueries].slice(0, 5)\r\n      : [action.lastQuery]\r\n      return {\r\n        ...state,\r\n        lastQueries\r\n      }      \r\n    default: \r\n      return state  \r\n  }\r\n}","export function itemsHasErrored(state = false, action) {\r\n  switch (action.type) {\r\n      case 'ITEMS_HAS_ERRORED':\r\n          return action.hasErrored;\r\n\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport function itemsIsLoading(state = false, action) {\r\n  switch (action.type) {\r\n      case 'ITEMS_IS_LOADING':\r\n          return action.isLoading;\r\n\r\n      default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport function items(state = [], action) {\r\n  switch (action.type) {\r\n      case 'ITEMS_FETCH_DATA_SUCCESS':\r\n          return action.items;\r\n\r\n      default:\r\n          return state;\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport rootReducer from '../reducers'\r\n\r\nexport default function configureStore(initalState) {\r\n  return createStore(rootReducer, initalState, applyMiddleware(thunk))\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.scss';\r\nimport configureStore from './redux/stores/configureStore'\r\nimport App from './App'\r\n\r\nconst store = configureStore({})\r\n\r\nReactDOM.render(\r\n  <Provider  store={store}>\r\n    <BrowserRouter basename='/forecast-app'>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,    \r\n  document.getElementById('root')\r\n);\r\n\r\nmodule.hot.accept();","\r\nexport const INPUT_CHANGED = 'INPUT_CHANGED'\r\n\r\nexport const FORM_SUBMITTED = 'FORM_SUBMITTED'\r\n\r\nexport const UPDATE_LAST_QUERIES = 'UPDATE_LAST_QUERIES'"],"sourceRoot":""}